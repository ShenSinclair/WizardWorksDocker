# ----------------------
# Deployment:
# - Runs 2 replicas of the containerized Go app
# - Uses IRSA-enabled service account `ecr-access-sa`
# - Pulls the container from AWS ECR using the :latest tag
# - Exposes port 3000 in the container
# ----------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-docker-app
  labels:
    app: simple-docker-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: simple-docker-app
  template:
    metadata:
      labels:
        app: simple-docker-app
    spec:
      serviceAccountName: ecr-access-sa  # IRSA-enabled service account linked to ECR pull permissions
      containers:
        - name: simple-docker-app
          image: 108782097787.dkr.ecr.us-east-2.amazonaws.com/simple-docker-service-0a37c0e6438d:latest
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"

---
# ----------------------
# Service:
# - Internal Kubernetes service that routes traffic to pods
# - Exposes port 80 externally, which maps to container port 3000
# - Type: NodePort (used behind an Ingress/ALB)
# ----------------------
apiVersion: v1
kind: Service
metadata:
  name: simple-docker-service
  labels:
    app: simple-docker-app
spec:
  selector:
    app: simple-docker-app
  ports:
    - port: 80
      targetPort: 3000
  type: NodePort

---
# ----------------------
# Ingress:
# - Creates an AWS Application Load Balancer (ALB)
# - Routes HTTP traffic to the `simple-docker-service` on port 80
# - Uses `alb` as the ingressClassName (ensure the ALB controller is installed)
# ----------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-docker-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: simple-docker-service
                port:
                  number: 80
